Earwaker, Tracy <tracy.earwaker@kingfisher.com>; Anton, Adrian <Adrian.Anton@bricodepot.ro>; Harris, Ben <Ben.Harris@kingfisher.com>; Grulois, Bernard <bernard.grulois@kingfisher.com>; Bird, Markus <Markus.Bird@kingfisher.com>; Bradford, Chris <chris.bradford@kingfisher.com>; Briden, Ben <ben.briden@kingfisher.com>; Card, Stacey <Stacey.Card@kingfisher.com>; Chandler, Sarah <Sarah.Chandler@Kingfisher.com>; Clarke, Brian <brian.clarke@kingfisher.com>; Colmer, Adam <Adam.Colmer@kingfisher.com>; Mamontov, Dmitry <dmitry.mamontov@castorama.ru>; Francois, Marc <Marc.Francois@kingfisher.com>; Godwin, Tony <Tony.Godwin@kingfisher.com>; Grainger, David <david.grainger@kingfisher.com>; Guillossou, Laurent <lguillossou@bricodepot.com>; Hailstone, Sandra <Sandra.Hailstone@kingfisher.com>; Haycocks, Dave <dave.haycocks@kingfisher.com>; Hedges, Chris <Chris.Hedges@kingfisher.com>; Hetherington, Ben <Ben.Hetherington@kingfisher.com>; James, Anita <Anita.James@kingfisher.com>; Jones, Caroline (KITS HR) <Caroline.Jones@kingfisher.com>; Jones, Neil <Neil.Jones@kingfisher.com>; Jones, Sharon <Sharon.Jones@kingfisher.com>; Fletcher, Jordan <Jordan.Fletcher@kingfisher.com>; Baldock, Jules <Jules.Baldock@kingfisher.com>; Arasteh, Kamron <Kamron.Arasteh@kingfisher.com>; Muir, Kathryn <Kathryn.Muir@kingfisher.com>; Kempthorne, Katherine <Katherine.Kempthorne@kingfisher.com>; Rowe, Kevin (KITS) <kevin.rowe@kingfisher.com>; Knowles, Paul <paul.knowles@kingfisher.com>; Lansdown-Bridge, Elliott <Elliott.Lansdown-Bridge@kingfisher.com>; Legrand, Catherine <Catherine.Legrand@kingfisher.com>; Lemire, Fabrice <Fabrice.Lemire@kingfisher.com>; Lewis, Sharon <Sharon.Lewis@kingfisher.com>; Sansome, Matt <Matt.Sansome@kingfisher.com>; McKenna, Jon <Jon.McKenna@kingfisher.com>; Roberts, Nathan <Nathan.Roberts@kingfisher.com>; OToole, Patrick <Patrick.OToole@kingfisher.com>; Owens, Paul <paul.owens@kingfisher.com>; Pacaux, Christelle <CHRISTELLE.PACAUX@kingfisher.com>; Palmer, David <David.Palmer@kingfisher.com>; Porter, Garry <Garry.Porter@kingfisher.com>; Price, Carolyn <Carolyn.Price@kingfisher.com>; Price, Steve <steve.price@kingfisher.com>; Jones, Rachel <Rachel.Jones@kingfisher.com>; Descamps, RÃ©gis <regis.descamps@kingfisher.com>; Rodor, Sylvie <Sylvie.Rodor@kingfisher.com>; Russell, Ami <Ami.Russell@kingfisher.com>; Russell, Chris <Chris.Russell@kingfisher.com>; Boyes, Samuel <Samuel.Boyes@kingfisher.com>; Saville, Jonathan <Jonathan.Saville@kingfisher.com>; Snowden, David <david.snowden@kingfisher.com>; Smith, Tim <Tim.Smith@kingfisher.com>; Larsen, Trudy <Trudy.Larsen@kingfisher.com>; Muller, Vincent <VINCENT.MULLER@kingfisher.com>; Walker, Matt <Matt.Walker@kingfisher.com>; Wherry, Simon <Simon.Wherry@kingfisher.com>; Wilson, Samantha <Samantha.Wilson@screwfix.com>; Wood, Simon <Simon.Wood@kingfisher.com>; Powell, Jess <Jess.Powell@kingfisher.com>{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "fallbackUrl": {
      "type": "string",
      "defaultValue": "https://blog.jeremylikness.com/?utm_source=jelikness&utm_medium=github&utm_campaign=url_shortener",
      "metadata": {
        "description": "The URL to fallback to if the short URL is invalid or not found"
      }
    },
    "utmSource": {
      "type": "string",
      "defaultValue": "jeliknes",
      "metadata": {
        "description": "UTM_SOURCE for appending to end of URL for tracking"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_L"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "sourceCodeRepositoryURL": {
      "type": "string",
      "defaultValue": "https://github.com/JeremyLikness/serverless-url-shortener",
      "metadata": {
        "description": "Source code repository URL"
      }
    },
    "sourceCodeBranch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Sourcecode Repo branch"
      }
    }
  },
  "variables": {
    "shortenerUrl": "[concat(parameters('siteName'), '.azurewebsites.net/')]",
    "hostingPlanName": "[concat(parameters('siteName'), '-plan')]",
    "storageAccountName": "[concat('azfnstore',uniquestring(resourceGroup().id))]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
  },
  "resources": [
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[parameters('siteName')]",
      "location": "London South",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]": "Resource"
      },
      "properties": {
        "ApplicationId": "[parameters('siteName')]",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[parameters('siteName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "properties": {
        "name": "[parameters('siteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('microsoft.insights/components/', parameters('siteName'))]"
      ],
      "resources": [
        {
          "type": "config",
          "name": "appsettings",
          "apiVersion": "2015-08-01",
          "properties": {
            "Project": "functionApp",
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "WEBSITE_CONTENTSHARE": "[toLower(parameters('siteName'))]",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', parameters('siteName')), '2015-05-01').InstrumentationKey]",
            "SHORTENER_URL": "[toLower(variables('shortenerUrl'))]",
            "UTM_SOURCE": "[toLower(parameters('utmSource'))]",
            "FALLBACK_URL": "[toLower(parameters('fallbackUrl'))]",
            "FUNCTIONS_EXTENSION_VERSION": "~1",
            "WEBSITE_NODE_DEFAULT_VERSION": "6.5.0",
            "ROUTING_EXTENSION_VERSION": "~0.2"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('siteName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          ]
        },
        {
          "type": "sourcecontrols",
          "apiVersion": "2015-08-01",
          "name": "web",
          "properties": {
            "RepoUrl": "[parameters('sourceCodeRepositoryURL')]",
            "branch": "[parameters('sourceCodeBranch')]",
            "IsManualIntegration": "true"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', parameters('siteName'))]",
            "[resourceId('Microsoft.Web/Sites/config', parameters('siteName'), 'appsettings')]"
          ]
        }
      ]
    }
  ]
}
